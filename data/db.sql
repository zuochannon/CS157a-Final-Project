CREATE TABLE ALBUMS(
    ALBUM_ID int AUTO_INCREMENT PRIMARY KEY,
    ALBUM_NAME varchar(128) NOT NULL,
    RELEASE_DATE date NOT NULL
);
CREATE TABLE ARTISTS(
    ARTIST_ID int AUTO_INCREMENT PRIMARY KEY,
    ARTIST_NAME varchar(128) NOT NULL
);
CREATE TABLE GENRES(
    GENRE_ID int AUTO_INCREMENT PRIMARY KEY,
	GENRE_NAME varchar(128) NOT NULL
);
CREATE TABLE SONGS(
    SONG_ID int AUTO_INCREMENT PRIMARY KEY,
    SONG_NAME varchar(128) NOT NULL,
    LENGTH int NOT NULL,
    ALBUM_ID int NULL,
    LISTEN_COUNT int NOT NULL,
    RELEASE_DATE date NOT NULL,
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID)
);
CREATE TABLE USERS(
    USER_ID int AUTO_INCREMENT PRIMARY KEY,
    USERNAME varchar(128) NOT NULL,
    FIRST_NAME varchar(128) NOT NULL,
    LAST_NAME varchar(128) NOT NULL
);
CREATE TABLE PLAYLISTS(
    PLAYLIST_ID int AUTO_INCREMENT PRIMARY KEY,
    PLAYLIST_AUTHOR int NOT NULL,
    PLAYLIST_NAME varchar(128) NOT NULL,
    CREATION_DATE date NOT NULL,
    FOREIGN KEY (PLAYLIST_AUTHOR) REFERENCES USERS(USER_ID)
);

CREATE TABLE ALBUM_ARTISTS(
    ALBUM_ID int,
    ARTIST_ID int,
    PRIMARY KEY(ALBUM_ID,ARTIST_ID),
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTISTS(ARTIST_ID)
);
CREATE TABLE SONG_ARTISTS(
    SONG_ID int,
    ARTIST_ID int,
    PRIMARY KEY(SONG_ID,ARTIST_ID),
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTISTS(ARTIST_ID)
);
CREATE TABLE ALBUM_GENRES(
    ALBUM_ID int,
    GENRE_ID int,
    PRIMARY KEY(ALBUM_ID,GENRE_ID),
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID)
);
CREATE TABLE SONG_GENRES(
    SONG_ID int,
    GENRE_ID int,
    PRIMARY KEY(SONG_ID,GENRE_ID),
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID)
);
CREATE TABLE PLAYLIST_SONGS(
    PLAYLIST_ID int,
    SONG_ID int,
    PRIMARY KEY(PLAYLIST_ID,SONG_ID),
    FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLISTS(PLAYLIST_ID),
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID)
);

CREATE VIEW DISCOGRAPHYVIEW AS
SELECT DISTINCT
    SONGS.SONG_ID,
    SONGS.SONG_NAME,
    SONGS.RELEASE_DATE,
    ARTISTS.ARTIST_ID,
    ALBUMS.ALBUM_NAME,
    GROUP_CONCAT(DISTINCT GENRES.GENRE_NAME SEPARATOR ', ') AS GENRE_NAMES
FROM SONGS
JOIN SONG_ARTISTS ON SONGS.SONG_ID = SONG_ARTISTS.SONG_ID
JOIN ARTISTS ON SONG_ARTISTS.ARTIST_ID = ARTISTS.ARTIST_ID
LEFT JOIN ALBUMS ON ALBUMS.ALBUM_ID = SONGS.ALBUM_ID
LEFT JOIN SONG_GENRES ON SONGS.SONG_ID = SONG_GENRES.SONG_ID
JOIN GENRES ON SONG_GENRES.GENRE_ID = GENRES.GENRE_ID;

CREATE VIEW ARTISTMOSTPOPULARVIEW AS
SELECT DISTINCT
    SONGS.SONG_ID,
    SONGS.SONG_NAME,
    SONGS.LISTEN_COUNT,
    SONGS.RELEASE_DATE,
    ARTISTS.ARTIST_ID
FROM SONGS
JOIN SONG_ARTISTS ON SONGS.SONG_ID = SONG_ARTISTS.SONG_ID
JOIN ARTISTS ON SONG_ARTISTS.ARTIST_ID = ARTISTS.ARTIST_ID
ORDER BY LISTEN_COUNT DESC;

CREATE VIEW PLAYLISTINFOVIEW AS 
SELECT DISTINCT
    PLAYLIST_ID,     
    PLAYLIST_AUTHOR AS AUTHOR_ID, 
    PLAYLIST_NAME,   
    CREATION_DATE,   
    USERS.USERNAME AS AUTHOR_NAME
FROM
    PLAYLISTS
    JOIN USERS ON USERS.USER_ID=PLAYLIST_AUTHOR;

CREATE VIEW PLAYLISTSONGVIEW AS
SELECT DISTINCT
    PLAYLISTS.PLAYLIST_ID,
	PLAYLISTS.PLAYLIST_NAME,
    USERS.USERNAME AS PLAYLIST_AUTHOR,
    PLAYLISTS.CREATION_DATE,
    ALBUMS.ALBUM_NAME,
    SONGS.SONG_NAME,
    SONGS.LENGTH
FROM
	PLAYLISTS
JOIN USERS ON PLAYLISTS.PLAYLIST_AUTHOR = USERS.USER_ID
JOIN PLAYLIST_SONGS ON PLAYLISTS.PLAYLIST_ID = PLAYLIST_SONGS.PLAYLIST_ID
JOIN SONGS ON PLAYLIST_SONGS.SONG_ID = SONGS.SONG_ID
LEFT JOIN ALBUMS ON SONGS.ALBUM_ID = ALBUMS.ALBUM_ID;

CREATE VIEW ALBUMINFOVIEW AS 
SELECT DISTINCT
    ALBUMS.ALBUM_ID,
      ALBUMS.RELEASE_DATE,
      ALBUMS.ALBUM_NAME,
      GROUP_CONCAT(DISTINCT GENRES.GENRE_NAME SEPARATOR ', ') AS GENRE_NAMES,
      GROUP_CONCAT(DISTINCT ARTISTS.ARTIST_NAME SEPARATOR ', ') AS ARTIST_NAMES
      FROM ALBUMS 
    LEFT JOIN ALBUM_ARTISTS ON ALBUMS.ALBUM_ID = ALBUM_ARTISTS.ALBUM_ID
    LEFT JOIN ARTISTS ON ALBUM_ARTISTS.ARTIST_ID = ARTISTS.ARTIST_ID
    LEFT JOIN ALBUM_GENRES ON ALBUMS.ALBUM_ID = ALBUM_GENRES.ALBUM_ID
    LEFT JOIN GENRES ON GENRES.GENRE_ID=ALBUM_GENRES.GENRE_ID
  GROUP BY 
    ALBUMS.ALBUM_ID;

CREATE VIEW ALBUMSONGSVIEW AS
SELECT
    ALBUMS.ALBUM_ID,
    SONGS.SONG_ID,
    SONGS.SONG_NAME,
    SONGS.LISTEN_COUNT,
    SONGS.LENGTH,
    ALBUMS.RELEASE_DATE,
    GROUP_CONCAT(DISTINCT ARTISTS.ARTIST_NAME SEPARATOR ', ') AS ARTIST_NAMES
FROM SONGS
JOIN SONG_ARTISTS ON SONGS.SONG_ID = SONG_ARTISTS.SONG_ID
JOIN ARTISTS ON SONG_ARTISTS.ARTIST_ID = ARTISTS.ARTIST_ID
JOIN ALBUMS ON SONGS.ALBUM_ID = ALBUMS.ALBUM_ID
GROUP BY
    ALBUMS.ALBUM_ID,
    ALBUMS.ALBUM_NAME,
    SONGS.SONG_ID,
    SONGS.SONG_NAME,
    SONGS.LISTEN_COUNT,
    SONGS.LENGTH,
    ALBUMS.RELEASE_DATE;