CREATE TABLE ALBUMS(
    ALBUM_ID int AUTO_INCREMENT PRIMARY KEY,
    ALBUM_NAME varchar(128) NOT NULL,
    RELEASE_DATE date NOT NULL
);
CREATE TABLE ARTISTS(
    ARTIST_ID int AUTO_INCREMENT PRIMARY KEY,
    ARTIST_NAME varchar(128) NOT NULL
);
CREATE TABLE GENRES(
    GENRE_ID int AUTO_INCREMENT PRIMARY KEY,
	GENRE_NAME varchar(128) NOT NULL
);
CREATE TABLE SONGS(
    SONG_ID int AUTO_INCREMENT PRIMARY KEY,
    SONG_NAME varchar(128) NOT NULL,
    LENGTH int NOT NULL,
    ALBUM_ID int NULL,
    LISTEN_COUNT int NOT NULL,
    RELEASE_DATE date NOT NULL,
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID)
);
CREATE TABLE USERS(
    USER_ID int AUTO_INCREMENT PRIMARY KEY,
    USERNAME varchar(128) NOT NULL,
    FIRST_NAME varchar(128) NOT NULL,
    LAST_NAME varchar(128) NOT NULL
);
CREATE TABLE PLAYLISTS(
    PLAYLIST_ID int AUTO_INCREMENT PRIMARY KEY,
    PLAYLIST_AUTHOR int NOT NULL,
    PLAYLIST_NAME varchar(128) NOT NULL,
    CREATION_DATE date NOT NULL,
    FOREIGN KEY (PLAYLIST_AUTHOR) REFERENCES USERS(USER_ID)
);

CREATE TABLE ALBUM_ARTISTS(
    ALBUM_ID int,
    ARTIST_ID int,
    PRIMARY KEY(ALBUM_ID,ARTIST_ID),
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTISTS(ARTIST_ID)
);
CREATE TABLE SONG_ARTISTS(
    SONG_ID int,
    ARTIST_ID int,
    PRIMARY KEY(SONG_ID,ARTIST_ID),
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTISTS(ARTIST_ID)
);
CREATE TABLE ALBUM_GENRES(
    ALBUM_ID int,
    GENRE_ID int,
    PRIMARY KEY(ALBUM_ID,GENRE_ID),
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID)
);
CREATE TABLE SONG_GENRES(
    SONG_ID int,
    GENRE_ID int,
    PRIMARY KEY(SONG_ID,GENRE_ID),
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID)
);
CREATE TABLE PLAYLIST_SONGS(
    PLAYLIST_ID int,
    SONG_ID int,
    PRIMARY KEY(PLAYLIST_ID,SONG_ID),
    FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLISTS(PLAYLIST_ID),
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID)
);